!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(self,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>l});const o=e=>e.dataset.src,r=e=>{},s=()=>"svgify",n={},a=async(e=null,t={})=>{const a=(t.getClassName||s)(),l=`.${a}`;let c=[];e instanceof Element?"svg"!==e.tagName&&(c=e.classList.contains(a)?[e]:[...e.querySelectorAll(l)]):null===e&&(c=[...document.querySelectorAll(l)]),await Promise.all(c.map((e=>(async(e,t={})=>{try{const a=(t.getUrl||o)(e);a in n||(n[a]=(async(e,t)=>{const o=await fetch(e,{headers:t}),r=document.createElement("div");return o.ok&&200===o.status?(r.innerHTML=await o.text(),r.querySelector("svg")):null})(a,(t.getHeaders||r)(e)));const l=await n[a];if(l){const o=l.cloneNode(!0),r=(t.getClassName||s)();o.classList.add(...[...e.classList].filter((e=>e!==r))),e.replaceWith(o)}}catch(e){console.error(e)}})(e,t))))},l={svgify:a,observe:(e=null,t={})=>{const o=new MutationObserver((e=>{for(let o of e)o.addedNodes&&o.addedNodes.length>0&&o.addedNodes.forEach((e=>{e instanceof Element&&a(e,t)}))}));return o.observe(null===e?document.body:e,{childList:!0,subtree:!0}),o}};return t})()));